// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2dBurgerWebAPI.Data;

#nullable disable

namespace _2dBurgerWebAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231222174608_SeAgregaAsociacionProductoHistorialNombres")]
    partial class SeAgregaAsociacionProductoHistorialNombres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_2dBurgerWebAPI.Models.ComboComida", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<int?>("HistorialComidascodigo")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("codigoComida")
                        .HasColumnType("int");

                    b.Property<int>("codigoHistorialComida")
                        .HasColumnType("int");

                    b.Property<int>("comidacodigo")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.HasIndex("HistorialComidascodigo");

                    b.HasIndex("comidacodigo");

                    b.ToTable("ComboComida");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialComidas", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<int>("codigoCombo")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("codigo");

                    b.HasIndex("codigoCombo")
                        .IsUnique();

                    b.ToTable("HistorialComidas");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialDescripciones", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("codigo");

                    b.ToTable("HistorialDescripciones");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialDescuentos", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("codigo");

                    b.ToTable("HistorialDescuentos");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialNombres", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<int>("codigoProducto")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("codigo");

                    b.HasIndex("codigoProducto")
                        .IsUnique();

                    b.ToTable("HistorialNombres");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialPrecios", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("codigo");

                    b.ToTable("HistorialPrecios");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Producto", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("codigoDescripcionActual")
                        .HasColumnType("int");

                    b.Property<int>("codigoDescuentoActual")
                        .HasColumnType("int");

                    b.Property<int>("codigoNombreActual")
                        .HasColumnType("int");

                    b.Property<int>("codigoPrecioActual")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.ToTable("Producto");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Producto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Combo", b =>
                {
                    b.HasBaseType("_2dBurgerWebAPI.Models.Producto");

                    b.HasDiscriminator().HasValue("Combo");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Comida", b =>
                {
                    b.HasBaseType("_2dBurgerWebAPI.Models.Producto");

                    b.HasDiscriminator().HasValue("Comida");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.ComboComida", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.HistorialComidas", null)
                        .WithMany("valor")
                        .HasForeignKey("HistorialComidascodigo");

                    b.HasOne("_2dBurgerWebAPI.Models.Comida", "comida")
                        .WithMany()
                        .HasForeignKey("comidacodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comida");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialComidas", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.Combo", null)
                        .WithOne("comidasActuales")
                        .HasForeignKey("_2dBurgerWebAPI.Models.HistorialComidas", "codigoCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialNombres", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.Producto", null)
                        .WithOne("nombreActual")
                        .HasForeignKey("_2dBurgerWebAPI.Models.HistorialNombres", "codigoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.HistorialComidas", b =>
                {
                    b.Navigation("valor");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Producto", b =>
                {
                    b.Navigation("nombreActual")
                        .IsRequired();
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Combo", b =>
                {
                    b.Navigation("comidasActuales")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
