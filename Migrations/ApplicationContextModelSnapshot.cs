// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2dBurgerWebAPI.Data;

#nullable disable

namespace _2dBurgerWebAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Categories.ComboCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ComboCategories");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Categories.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Logs.DescriptionsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DescriptionsLog");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Logs.DiscountsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.ToTable("DiscountsLog");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Logs.FoodsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FoodsLog");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Logs.NamesLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NamesLog");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Logs.PricesLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.ToTable("PricesLog");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.ComboFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("FoodLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("FoodLogId");

                    b.ToTable("ComboFood");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentDescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentDiscountId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentNameId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentPriceId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CurrentDescriptionId")
                        .IsUnique();

                    b.HasIndex("CurrentDiscountId")
                        .IsUnique();

                    b.HasIndex("CurrentNameId")
                        .IsUnique();

                    b.HasIndex("CurrentPriceId")
                        .IsUnique();

                    b.ToTable("Product");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Combo", b =>
                {
                    b.HasBaseType("_2dBurgerWebAPI.Models.Products.Product");

                    b.Property<int>("CurrentComboCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentFoodsId")
                        .HasColumnType("int");

                    b.HasIndex("CurrentComboCategoryId")
                        .IsUnique()
                        .HasFilter("[CurrentComboCategoryId] IS NOT NULL");

                    b.HasIndex("CurrentFoodsId")
                        .IsUnique()
                        .HasFilter("[CurrentFoodsId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Combo");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Food", b =>
                {
                    b.HasBaseType("_2dBurgerWebAPI.Models.Products.Product");

                    b.Property<int>("CurrentFoodCategoryId")
                        .HasColumnType("int");

                    b.HasIndex("CurrentFoodCategoryId");

                    b.HasDiscriminator().HasValue("Food");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.ComboFood", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.Products.Food", "Food")
                        .WithMany("ComboFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("_2dBurgerWebAPI.Models.Logs.FoodsLog", "FoodLog")
                        .WithMany("Value")
                        .HasForeignKey("FoodLogId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("FoodLog");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Product", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.Logs.DescriptionsLog", "CurrentDescription")
                        .WithOne()
                        .HasForeignKey("_2dBurgerWebAPI.Models.Products.Product", "CurrentDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2dBurgerWebAPI.Models.Logs.DiscountsLog", "CurrentDiscount")
                        .WithOne()
                        .HasForeignKey("_2dBurgerWebAPI.Models.Products.Product", "CurrentDiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2dBurgerWebAPI.Models.Logs.NamesLog", "CurrentName")
                        .WithOne()
                        .HasForeignKey("_2dBurgerWebAPI.Models.Products.Product", "CurrentNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2dBurgerWebAPI.Models.Logs.PricesLog", "CurrentPrice")
                        .WithOne()
                        .HasForeignKey("_2dBurgerWebAPI.Models.Products.Product", "CurrentPriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentDescription");

                    b.Navigation("CurrentDiscount");

                    b.Navigation("CurrentName");

                    b.Navigation("CurrentPrice");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Combo", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.Categories.ComboCategory", "CurrentComboCategory")
                        .WithOne()
                        .HasForeignKey("_2dBurgerWebAPI.Models.Products.Combo", "CurrentComboCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2dBurgerWebAPI.Models.Logs.FoodsLog", "CurrentFoods")
                        .WithOne()
                        .HasForeignKey("_2dBurgerWebAPI.Models.Products.Combo", "CurrentFoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentComboCategory");

                    b.Navigation("CurrentFoods");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Food", b =>
                {
                    b.HasOne("_2dBurgerWebAPI.Models.Categories.FoodCategory", "CurrentFoodCategory")
                        .WithMany()
                        .HasForeignKey("CurrentFoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentFoodCategory");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Logs.FoodsLog", b =>
                {
                    b.Navigation("Value");
                });

            modelBuilder.Entity("_2dBurgerWebAPI.Models.Products.Food", b =>
                {
                    b.Navigation("ComboFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
